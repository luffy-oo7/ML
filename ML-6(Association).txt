import pandas as pd
from mlxtend.frequent_patterns import apriori, association_rules
import matplotlib.pyplot as plt

# Load the dataset (header=None since there's no header)
#dataset_path = 'Market_Basket_Optimisation.csv'
data = pd.read_csv('/Market_Basket_Optimisation.csv', header=None)

# Data Preprocessing
# Transform dataset into a list of transactions
transactions = []
for i in range(0, data.shape[0]):
    transaction = [str(data.values[i, j]) for j in range(0, data.shape[1]) if str(data.values[i, j]) != 'nan']
    transactions.append(transaction)

# Create a DataFrame with binary values for each item
from mlxtend.preprocessing import TransactionEncoder

te = TransactionEncoder()
te_ary = te.fit(transactions).transform(transactions)
df = pd.DataFrame(te_ary, columns=te.columns_)

# Train Apriori Algorithm on the dataset
frequent_itemsets = apriori(df, min_support=0.01, use_colnames=True)

# Generate the association rules
rules = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.2)

# Display the rules
print("Association Rules:")
print(rules)

# Visualize the list of rules
plt.scatter(rules['support'], rules['confidence'], alpha=0.5)
plt.xlabel('Support')
plt.ylabel('Confidence')
plt.title('Support vs Confidence')
plt.show()

# Modify hyperparameters and observe the changes in rules
# Increase the minimum confidence to 0.5
rules_high_confidence = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.5)

# Display the rules with high confidence
print("Association Rules with Higher Confidence:")
print(rules_high_confidence)
